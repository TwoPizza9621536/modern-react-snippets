{
  "Main React Entry Point": {
    "prefix": "mrep",
    "body": [
      "import React from 'react'",
      "import ReactDOM from 'react-dom/client'",
      "import App from './App'",
      "",
      "const rootContainerElement = document.getElementById('root')",
      "",
      "if (!rootContainerElement) {",
      "\tthrow Error('No root container element found, please add one with id=\"root\".')",
      "}",
      "",
      "const root = ReactDOM.createRoot(rootContainerElement)",
      "",
      "root.render(",
      "\t<React.StrictMode>",
      "\t\t<App />",
      "\t</React.StrictMode>,",
      ")"
    ],
    "description": "Create entry point for React to hook on"
  },
  "Function Component": {
    "prefix": "fc",
    "body": [
      "function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (${0})",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "Function Component"
  },
  "Arrow Function Component": {
    "prefix": "sfc",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "\treturn (${0})",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "Stateless Function Component"
  },
  "Function Component With Props": {
    "prefix": "fcp",
    "body": [
      "import PropTypes from 'prop-types'",
      "",
      "function ${1:${TM_FILENAME_BASE}}({}) {",
      "\treturn (${0})",
      "}",
      "",
      "${1:${TM_FILENAME_BASE}}.propTypes = {}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "Function Component With Props"
  },
  "Arrow Function Component With Props": {
    "prefix": "sfcp",
    "body": [
      "import PropTypes from 'prop-types'",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({}) => {",
      "\treturn (${0})",
      "}",
      "",
      "${1:${TM_FILENAME_BASE}}.propTypes = {}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "Arrow Function Component With Props"
  },
  "Add new state variable using useState Hook": {
    "prefix": "uhs",
    "body": [
      "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState(${2})"
    ],
    "description": "Add new state variable using useState hook"
  },
  "Add new state variable using useReducer Hook": {
    "prefix": "uhr",
    "body": [
      "const [${1}, dispatch] = useReducer(${2}, ${3})"
    ],
    "description": "Add new state variable using useReducer hook"
  },
  "Add external state using useEffect Hook": {
    "prefix": "uhe",
    "body": [
      "useEffect(() => {",
      "\t${2}",
      "}, [${1}])"
    ],
    "description": "Add external state using useEffect hook"
  }
}
